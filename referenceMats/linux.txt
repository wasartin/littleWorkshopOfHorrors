Terminal Stuff cheatsheet
=========================


==================================================================
----------------------------Linux---------------------------------
==================================================================

open a tar
	$tar -xvf <file-name>.tar 	

moving a file (Also renaming a file
	$mv <path><filename>
	$mv <path><filename> <target-path><filename>
	
hide the present working directory path
	$export PS1='\u@\h: '	#this is temp
	#Or you can put the new line into the ~/.bashrc file
	$PS1='${debian_chroot:+($debian_chroot)}\u@\h: \W\$ '
		
output results of command into a text file 
	$<command> > <name>.txt 	#Create file 
	$<command> >> <name>.txt	#Append to an existing file
	$<command> %> <name>.txt	#include stderr & create file
	$<command> %>> <name>.txt	#" & append to file
	$<command> 2>&1 | <name>.txt	#stdrr, output in console & file.
	
	
Man Page Stuff:
	-----------------------------------------------------------
	|	MANUAL SECTIONS
	|		The standard sections of the manual include:
	|
	|		1      User Commands
	|		2      System Calls
	|		3      C Library Functions
	|		4      Devices and Special Files
	|		5      File Formats and Conventions
	|		6      Games et. al.
	|		7      Miscellanea
	|		8      System Administration tools and Daemons
	|
	|		Distributions customize the manual section to their 
	|		specifics, which often include additional sections.	
	-----------------------------------------------------------
	So, when you see
		"Look at readdir(3)"
	in a man page, it means to go to your terminal and enter
		$man 3 readdir

getting stuff from files from ssh
	scp <login>@<hostname>:"<path-to-files" <target-path-on-your
		-machine>
		
transfer stuff from your computer into another
	#go to the directory of the stuff you have
	$sftp username@hostname
	#go to the directory you want the stuff to
	$put something.tar
	#should be good. try to make the file a .tar or something
==================================================================
--------------------------Networking------------------------------
==================================================================
get a website's IP address
	dig <website>
	
	nslookup <website>

Retrieve content from webserver via CL
	'wget'
	
Listing downloaded stuff
	grep " install " /var/log/dpkg.log
	
Listing recently downloaded stuff
	awk '$3~/^install$/ {print $4;}' /var/log/dpkg.log
	
==================================================================
-------------------------------VIM--------------------------------
==================================================================

1. The cursor is moved using either the arrow keys or the hjkl
	keys.
	     ^
             k
	<h	l>
	     j

2. vim <file-name> <ENTER>

3. exit vim
	<ESC> :q! <ENTER>	to quit w/o saving
	<ESC> :wq <ENTER>	save & quit
4. insert or append
	i <type-text> <ESC>	insert before cursor & return to 
		 		 	normal mode
	a <type-text> <ESC>	append after line
5. delete
	dw	#delete from cursor to next work
	d$	#delete from cursor to end of line
	dd	#delete whole line

6. Motion
	2w	#repeat the word motion 2 types
		#<operator> <number> <motion>
	0	#move to start of a line

7. Undo
	u	#undo previous action
	U	# undo all changes on a line
	<CTRL-R>#undo the undo
	
==================================================================
-------------------------------C----------------------------------
==================================================================
GDB

reference:= https://www.howtoforge.com/tutorial/how-to-debug-c-programs-in-linux-using-gdb/

open terminal
   $gdb <your program executable>
   $break <whatever line you want to break at> 
   $run <arguments>
   $s #step one line of code, going into functions if needed
   $next #step without going into functions
   $print <variableName> #this is to see the value

   #Example 
   $gdb rlg327
   $break 443
   $break 580
   $run --load
   
  https://cal-linux.com/tutorials/vectors.html

Running gdb that requires User Input : using two terminals
   #On Terminal 1
      $./programName
   #On Terminal 2
      $ps -a | grep programName	    #Displays the PID
   #On Terminal 2
      $gdb -p <PID>
     
Valgrind Debugging
   #Good to know switches
   $valgrind -v --track-origins=yes --show-leak-kinds=all --leak-check=full --log-file=valgrind.log ./programName
      #v:= verbose
      #--log-file=<arg>:=Valgrind sends all of its messages to the spec file
==================================================================
----------------------------EMACS---------------------------------
==================================================================
	show row/column 
		(setq column-number-mode t)

==================================================================
-----------------------------MISC---------------------------------
==================================================================		
Notes about doc.
 - The columns should be no wider than 67 columns 
	(fits half my working laptop screen)
